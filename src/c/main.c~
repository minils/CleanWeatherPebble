#include <pebble.h>

/* WINDOWS */
static Window *s_main_window;

/* BACKGROUND */
static Layer *s_background_layer;

/* TEXT LAYERS */
static TextLayer *s_time_layer;
static TextLayer *s_date_layer;

/* FONTS */
static GFont s_time_font;
static GFont s_date_font;

/* MISC */
static GRect bounds;
static char *sys_locale;

/* IMGS */
static BitmapLayer *s_weather_layer;
static GBitmap *s_weather_bitmap;

static void update_time()
{
  time_t temp = time(NULL);
  struct tm *tick_time = localtime(&temp);
  
  // assign time to time_layer
  static char s_buffer_time[8];
  strftime(s_buffer_time, sizeof(s_buffer_time), clock_is_24h_style() ? "%H:%M" : "%I:%M", tick_time);
  text_layer_set_text(s_time_layer, s_buffer_time);
  
  // assign date to date_layer
  static char s_buffer_date[15];
  strftime(s_buffer_date, sizeof(s_buffer_date), "%a %d.%m.", tick_time);
  text_layer_set_text(s_date_layer, s_buffer_date);
}

static void tick_handler(struct tm *ticktime, TimeUnits  units_changed)
{
  update_time();
}

static void background_update(Layer *layer, GContext *ctx)
{
  graphics_context_set_fill_color(ctx, GColorBlack);
  graphics_fill_rect(ctx, bounds, 0, GCornerNone);
  graphics_context_set_fill_color(ctx, GColorWhite);
  graphics_fill_rect(ctx, bounds, 10, GCornersAll);
}

static void main_window_load(Window *window)
{
  Layer *window_layer = window_get_root_layer(window);
  bounds = layer_get_bounds(window_layer);
  
  // BACKGROUND LAYER
  s_background_layer = layer_create(bounds);
  layer_set_update_proc(s_background_layer, background_update);
  
  layer_add_child(window_layer, s_background_layer);
  
  layer_mark_dirty(s_background_layer);
  
  // TEST IMAGE
  s_weather_bitmap = gbitmap_create_with_resource(RESOURCE_ID_IMAGE_CLOUDY);
  s_weather_layer = bitmap_layer_create(GRect(0, 5, bounds.size.w, 100));
  //bitmap_layer_set_background_color(s_weather_layer, GColorWhite);
  bitmap_layer_set_bitmap(s_weather_layer, s_weather_bitmap);
  layer_add_child(window_layer, bitmap_layer_get_layer(s_weather_layer));
  
  // TIME LAYER
  s_time_font = fonts_load_custom_font(resource_get_handle(RESOURCE_ID_FONT_GAMPLAY_34));
  s_time_layer = text_layer_create(GRect(0, PBL_IF_ROUND_ELSE(106, 100), bounds.size.w, 50));
  
  text_layer_set_background_color(s_time_layer, GColorClear);
  text_layer_set_text_color(s_time_layer, GColorBlack);
  text_layer_set_font(s_time_layer, s_time_font);
  text_layer_set_text_alignment(s_time_layer, GTextAlignmentCenter);
  
  layer_add_child(window_layer, text_layer_get_layer(s_time_layer));
  
  tick_timer_service_subscribe(MINUTE_UNIT, tick_handler);
  
  // DATE LAYER
  s_date_font = fonts_load_custom_font(resource_get_handle(RESOURCE_ID_FONT_GAMPLAY_20));
  s_date_layer = text_layer_create(GRect(0, PBL_IF_ROUND_ELSE(146, 140), bounds.size.w, 50));
  
  text_layer_set_background_color(s_date_layer, GColorClear);
  text_layer_set_text_color(s_date_layer, GColorBlack);
  text_layer_set_font(s_date_layer, s_date_font);
  text_layer_set_text_alignment(s_date_layer, GTextAlignmentCenter);
  
  layer_add_child(window_layer, text_layer_get_layer(s_date_layer));
}

static void main_window_unload(Window *window)
{
  text_layer_destroy(s_time_layer);
  text_layer_destroy(s_date_layer);
  layer_destroy(s_background_layer);
  fonts_unload_custom_font(s_time_font);
  fonts_unload_custom_font(s_date_font);
}

static void init()
{
  sys_locale = setlocale(LC_ALL, "");
  s_main_window = window_create();
  
  window_set_window_handlers(s_main_window, (WindowHandlers) {
    .load = main_window_load,
    .unload = main_window_unload
  });
  
  window_stack_push(s_main_window, true);
  update_time();
}

static void deinit()
{
  window_destroy(s_main_window);
}

int main(void)
{
  init();
  app_event_loop();
  APP_LOG(APP_LOG_LEVEL_DEBUG, "Done initializing, pushed window: %p", s_main_window);
  deinit();
}